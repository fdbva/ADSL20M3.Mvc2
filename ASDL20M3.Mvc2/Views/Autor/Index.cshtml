@model IEnumerable<AutorModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UltimoNome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nascimento)
            </th>
            <th>QtdLivros</th>
            <th>NomesLivros</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var autorModel in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => autorModel.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => autorModel.UltimoNome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => autorModel.Nascimento)
                </td>
                <td>
                    @*recomendado usar um ViewModel e não colocar essa lógica aqui*@
                    @autorModel.Livros.Count
                </td>
                <td>
                    @*recomendado usar um ViewModel e não colocar essa lógica aqui*@
                    @string.Join(", ", autorModel.Livros.Select(x => x.Titulo))
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@autorModel.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@autorModel.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@autorModel.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
